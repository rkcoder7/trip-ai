from reportlab.lib import colors
from reportlab.lib.pagesizes import A4
from reportlab.lib.styles import getSampleStyleSheet, ParagraphStyle
from reportlab.platypus import SimpleDocTemplate, Paragraph, Spacer
from reportlab.pdfbase import pdfmetrics
from reportlab.pdfbase.ttfonts import TTFont
import tempfile
import os
import re
from utils import format_day_content

# Register Arial Unicode MS for font support
FONT_PATH = os.path.join(os.path.dirname(__file__), './assets/Arial Unicode.ttf')
pdfmetrics.registerFont(TTFont('ArialUnicode', FONT_PATH))

def create_custom_styles():
    """
    Create custom styles for the PDF.
    """
    styles = getSampleStyleSheet()

    # Title style
    styles.add(ParagraphStyle(
        name='CustomTitle',
        fontName='ArialUnicode',
        fontSize=24,
        spaceAfter=30,
        textColor=colors.HexColor('#1a237e'),
        alignment=1,  # Center alignment
        leading=32
    ))

    # Subtitle style
    styles.add(ParagraphStyle(
        name='CustomSubtitle',
        fontName='ArialUnicode',
        fontSize=18,
        spaceAfter=20,
        textColor=colors.HexColor('#283593'),
        alignment=1,
        leading=24
    ))

    # Day Header style
    styles.add(ParagraphStyle(
        name='DayHeader',
        fontName='ArialUnicode',
        fontSize=16,
        spaceBefore=20,
        spaceAfter=12,
        textColor=colors.HexColor('#1976d2'),
        leading=20,
        bold=True
    ))

    # Normal text style
    styles.add(ParagraphStyle(
        name='CustomBody',
        fontName='ArialUnicode',
        fontSize=12,
        spaceBefore=6,
        spaceAfter=12,
        leading=16,
        firstLineIndent=20
    ))

    return styles

def generate_trip_pdf(trip_plan, start_location, destination, start_date, end_date):
    """
    Generate a PDF file for the trip plan.
    """
    # Create a temporary file for the PDF
    temp_pdf = tempfile.NamedTemporaryFile(delete=False, suffix='.pdf')
    pdf_path = temp_pdf.name
    temp_pdf.close()

    # Create the PDF document
    doc = SimpleDocTemplate(
        pdf_path,
        pagesize=A4,
        rightMargin=72,
        leftMargin=72,
        topMargin=72,
        bottomMargin=72
    )

    # Get styles
    styles = create_custom_styles()

    # Build the PDF content
    story = []

    # Add title
    title = f"Travel Itinerary\n{start_location} to {destination}"
    story.append(Paragraph(title, styles['CustomTitle']))

    # Add date range
    date_range = f"{start_date} - {end_date}"
    story.append(Paragraph(date_range, styles['CustomSubtitle']))
    story.append(Spacer(1, 30))

    # Process the trip plan
    days = re.split(r'(?=Day \d+:|DAY \d+:)', trip_plan)

    for day in days:
        if day.strip():
            # Add day header
            if re.match(r'Day \d+:|DAY \d+:', day):
                header = day.split('\n')[0]
                content = '\n'.join(day.split('\n')[1:])
            else:
                header = "Overview"
                content = day

            story.append(Paragraph(header, styles['DayHeader']))

            # Format and add the content
            sections = format_day_content(content)
            for section in sections:
                if section.strip():
                    story.append(Paragraph(section, styles['CustomBody']))

            story.append(Spacer(1, 20))

    # Add footer
    story.append(Spacer(1, 30))
    footer_text = "Generated by AI Trip Planner"
    story.append(Paragraph(footer_text, styles['CustomSubtitle']))

    # Build the PDF
    doc.build(story)

    return pdf_path